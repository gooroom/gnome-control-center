diff --git a/panels/display/cc-display-panel.c b/panels/display/cc-display-panel.c
index 444a30c..c0a6633 100644
--- a/panels/display/cc-display-panel.c
+++ b/panels/display/cc-display-panel.c
@@ -687,8 +687,14 @@ static void
 resolution_row_sync (GtkPopover       *popover,
                      CcDisplayMonitor *output)
 {
-  gtk_label_set_text (GTK_LABEL (gtk_popover_get_relative_to (popover)),
-                      get_resolution_string (cc_display_monitor_get_mode (output)));
+  if (g_strcmp0 (get_resolution_string (cc_display_monitor_get_mode (output)), "") == 0 ) {
+    gtk_label_set_text (GTK_LABEL (gtk_popover_get_relative_to (popover)),
+                        get_resolution_string (cc_display_monitor_get_preferred_mode (output)));
+  }
+  else {
+    gtk_label_set_text (GTK_LABEL (gtk_popover_get_relative_to (popover)),
+                        get_resolution_string (cc_display_monitor_get_mode (output)));
+  }
 }
 
 static GtkWidget *
@@ -701,6 +707,7 @@ make_resolution_row (CcDisplayPanel *panel, CcDisplayMonitor *output)
   gtk_popover_set_relative_to (GTK_POPOVER (popover), label);
 
   row = make_row (panel->rows_size_group, gtk_label_new (_("Resolution")), label);
+  resolution_row_sync (popover, output);
   g_signal_connect_object (row, "activated", G_CALLBACK (gtk_popover_popup),
                            popover, G_CONNECT_SWAPPED);
   g_signal_connect_object (output, "mode", G_CALLBACK (resolution_row_sync),
@@ -726,8 +733,14 @@ make_refresh_rate_popover (CcDisplayPanel *panel)
   GList *freqs, *l;
 
   res_freqs = g_object_get_data (G_OBJECT (panel->current_output), "res-freqs");
-  freqs = g_hash_table_lookup (res_freqs,
-                               get_resolution_string (cc_display_monitor_get_mode (panel->current_output)));
+  if (g_strcmp0 (get_resolution_string (cc_display_monitor_get_mode (panel->current_output)), "") == 0) {
+    freqs = g_hash_table_lookup (res_freqs,
+                                 get_resolution_string (cc_display_monitor_get_preferred_mode (panel->current_output)));
+  }
+  else {
+    freqs = g_hash_table_lookup (res_freqs,
+                                 get_resolution_string (cc_display_monitor_get_mode (panel->current_output)));
+  }
 
   listbox = make_list_box ();
   g_object_set (listbox, "margin", 12, NULL);
@@ -754,8 +767,14 @@ static void
 refresh_rate_row_sync (GtkPopover       *popover,
                        CcDisplayMonitor *output)
 {
-  gtk_label_set_text (GTK_LABEL (gtk_popover_get_relative_to (popover)),
-                      get_frequency_string (cc_display_monitor_get_mode (output)));
+  if (g_strcmp0 (get_frequency_string (cc_display_monitor_get_mode (output)), "") == 0) {
+    gtk_label_set_text (GTK_LABEL (gtk_popover_get_relative_to (popover)),
+                        get_frequency_string (cc_display_monitor_get_preferred_mode (output)));
+  }
+  else {
+    gtk_label_set_text (GTK_LABEL (gtk_popover_get_relative_to (popover)),
+                        get_frequency_string (cc_display_monitor_get_mode (output)));
+  }
 }
 
 static gboolean
@@ -763,6 +782,10 @@ should_show_refresh_rate (CcDisplayMonitor *output)
 {
   GHashTable *res_freqs = g_object_get_data (G_OBJECT (output), "res-freqs");
   const gchar *resolution = get_resolution_string (cc_display_monitor_get_mode (output));
+
+  if (g_strcmp0 (resolution, "") == 0) {
+    resolution = get_resolution_string (cc_display_monitor_get_preferred_mode (output));
+  }
   GList *freqs = g_hash_table_lookup (res_freqs, resolution);
 
   return g_list_length (freqs) > 1;
@@ -788,6 +811,7 @@ make_refresh_rate_row (CcDisplayPanel *panel, CcDisplayMonitor *output)
   gtk_popover_set_relative_to (GTK_POPOVER (popover), label);
 
   row = make_row (panel->rows_size_group, gtk_label_new (_("Refresh Rate")), label);
+  refresh_rate_row_sync (popover, output);
   g_signal_connect_object (row, "activated", G_CALLBACK (gtk_popover_popup),
                            popover, G_CONNECT_SWAPPED);
   g_signal_connect_object (output, "mode", G_CALLBACK (refresh_rate_row_sync),
