diff --git a/panels/background/cc-background-panel.c b/panels/background/cc-background-panel.c
index 896c4d0..78efcd4 100644
--- a/panels/background/cc-background-panel.c
+++ b/panels/background/cc-background-panel.c
@@ -41,11 +41,13 @@
 
 #define WP_PATH_ID "org.gnome.desktop.background"
 #define WP_LOCK_PATH_ID "org.gnome.desktop.screensaver"
+#define WP_CONTROL_ID "org.gnome.ControlCenter"
 #define WP_URI_KEY "picture-uri"
 #define WP_OPTIONS_KEY "picture-options"
 #define WP_SHADING_KEY "color-shading-type"
 #define WP_PCOLOR_KEY "primary-color"
 #define WP_SCOLOR_KEY "secondary-color"
+#define WP_BACKGROUND_KEY "background-type"
 
 #define CHECK_ICON    "/org/gnome/control-center/background/check_icon"
 
@@ -438,11 +440,14 @@ on_type_changed (GtkComboBox       *combo_box,
                  CcBackgroundPanel *panel)
 {
   GtkWidget *stack, *box;
+  GSettings *settings;
 
   panel->background_mode = gtk_combo_box_get_active (combo_box);
+  settings = g_settings_new (WP_CONTROL_ID);
 
   box = panel->lock_box;
   if (panel->background_mode == MODE_EACH) {
+    g_settings_set_string (settings, WP_BACKGROUND_KEY, "mode-each");
     gtk_widget_set_visible (box, TRUE);
 
     set_visible_checked_icon (panel->desktop_thumbnail_box,
@@ -471,6 +476,7 @@ on_type_changed (GtkComboBox       *combo_box,
       set_background (panel, panel->lock_settings, panel->current_lock_background);
   }
   else if (panel->background_mode == MODE_ALL) {
+    g_settings_set_string (settings, WP_BACKGROUND_KEY, "mode-all");
     set_visible_checked_icon (panel->desktop_thumbnail_box,
                               panel->default_prov,
                               panel->desktop_overlay,
@@ -486,6 +492,7 @@ on_type_changed (GtkComboBox       *combo_box,
     panel->prior_lock_background_uri = g_strdup (cc_background_item_get_uri (panel->current_lock_background));
     set_background (panel, panel->lock_settings, panel->current_background);
   }
+  g_settings_apply (settings);
 }
 
 static gboolean
@@ -652,7 +659,11 @@ cc_background_panel_constructed (GObject *object)
   g_signal_connect (panel->desktop_eventbox, "button-press-event", G_CALLBACK (on_desktop_press), panel);
   g_signal_connect (panel->lock_eventbox, "button-press-event", G_CALLBACK (on_lock_press), panel);
 
-  gtk_combo_box_set_active (GTK_COMBO_BOX (panel->type_select_combobox), MODE_EACH);
+  if (panel->background_mode == MODE_ALL) {
+    gtk_combo_box_set_active (GTK_COMBO_BOX (panel->type_select_combobox), MODE_ALL);
+  } else {
+    gtk_combo_box_set_active (GTK_COMBO_BOX (panel->type_select_combobox), MODE_EACH);
+  }
 }
 
 static void
@@ -707,6 +718,8 @@ static void
 cc_background_panel_init (CcBackgroundPanel *panel)
 {
   GFile *file = NULL;
+  GSettings *settings;
+  g_autofree gchar* background_type = NULL;
 
   g_resources_register (cc_background_get_resource ());
 
@@ -734,7 +747,13 @@ cc_background_panel_init (CcBackgroundPanel *panel)
   gtk_css_provider_load_from_file (panel->provider, file, NULL);
   g_object_unref (file);
 
-  panel->background_mode = MODE_EACH;
+  settings = g_settings_new (WP_CONTROL_ID);
+  background_type = g_settings_get_string (settings, WP_BACKGROUND_KEY);
+  if (g_strcmp0 (background_type, "mode-all") == 0) {
+    panel->background_mode = MODE_ALL;
+  } else {
+    panel->background_mode = MODE_EACH;
+  }
   panel->applied_background = APPLY_DESKTOP;
 
   panel->connection = g_application_get_dbus_connection (g_application_get_default ());
diff --git a/shell/org.gnome.ControlCenter.gschema.xml b/shell/org.gnome.ControlCenter.gschema.xml
index 46d1b81..e205a53 100644
--- a/shell/org.gnome.ControlCenter.gschema.xml
+++ b/shell/org.gnome.ControlCenter.gschema.xml
@@ -20,5 +20,12 @@
       <summary>Show settings list</summary>
       <description>Show side panel list that matches the User settings values.</description>
     </key>
+    <key name="background-type" type="s">
+      <default>'mode-each'</default>
+      <summary>The identifier for the last set background type</summary>
+      <description>
+        The identifier for the last set background type. the value can be mode-each or mode-all. Unrecognised values will be ignored and the EACH MODE will be set.
+      </description>
+    </key>
   </schema>
 </schemalist>
